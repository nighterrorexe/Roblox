-- VoidHub Library v2 - Premium Edition
local VoidHub = {}

local ValidKeys = {
    "system1"
}

local BypassKey = false
local ExecuteAfterKey = nil
local SavedKey = nil
local player = game.Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- TweenService for smooth animations
local TweenService = game:GetService("TweenService")

if isfile and isfile("VoidHubKey.txt") then
    SavedKey = readfile("VoidHubKey.txt")
    if table.find(ValidKeys, SavedKey) then
        BypassKey = true
    else
        SavedKey = nil
    end
end

function VoidHub:Execute(codeOrFunction)
    if type(codeOrFunction) == "string" then
        local success, err = pcall(function()
            loadstring(game:HttpGet(codeOrFunction, true))()
        end)
        if not success then
            warn("VoidHub Execute Error: " .. tostring(err))
        end
    elseif type(codeOrFunction) == "function" then
        pcall(codeOrFunction)
    end
end

function VoidHub:SaveKey(key)
    if key then
        SavedKey = key
        BypassKey = true
        if writefile then
            pcall(function()
                writefile("VoidHubKey.txt", key)
            end)
        end
    end
end

function VoidHub:SetExecute(codeOrFunction)
    ExecuteAfterKey = codeOrFunction
    if BypassKey then
        self:Execute(ExecuteAfterKey)
    end
end

function VoidHub:CreateWindow()
    if BypassKey and table.find(ValidKeys, SavedKey) then
        if ExecuteAfterKey then
            self:Execute(ExecuteAfterKey)
        end
        return
    end

    if PlayerGui:FindFirstChild("VoidHubKeyUI") then return end

    -- Animation presets
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tweenInfoBounce = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    local tweenInfoElastic = TweenInfo.new(0.7, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out)

    local function createGlowEffect(parent)
        local glow = Instance.new("ImageLabel")
        glow.Name = "Glow"
        glow.Size = UDim2.new(1, 20, 1, 20)
        glow.Position = UDim2.new(0, -10, 0, -10)
        glow.BackgroundTransparency = 1
        glow.Image = "rbxassetid://8992231221"
        glow.ImageColor3 = Color3.fromRGB(255, 105, 180) -- Hot pink glow
        glow.ScaleType = Enum.ScaleType.Slice
        glow.SliceCenter = Rect.new(100, 100, 100, 100)
        glow.SliceScale = 0.02
        glow.Parent = parent
        return glow
    end

    local function createLoadingAnimation(parent)
        local loadingFrame = Instance.new("Frame")
        loadingFrame.Name = "LoadingAnimation"
        loadingFrame.Size = UDim2.new(1, 0, 1, 0)
        loadingFrame.BackgroundTransparency = 1
        loadingFrame.Visible = false
        loadingFrame.Parent = parent

        local circles = {}
        local colors = {
            Color3.fromRGB(255, 105, 180), -- Hot Pink
            Color3.fromRGB(138, 43, 226),  -- Purple
            Color3.fromRGB(148, 0, 211)    -- Dark Violet
        }

        for i = 1, 3 do
            local circle = Instance.new("Frame")
            circle.Size = UDim2.new(0, 15, 0, 15)
            circle.AnchorPoint = Vector2.new(0.5, 0.5)
            circle.Position = UDim2.new(0.5, (i - 2) * 25, 0.5, 0) -- Spread circles horizontally
            circle.BackgroundColor3 = colors[i]
            circle.BorderSizePixel = 0
            circle.Parent = loadingFrame

            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = circle

            table.insert(circles, circle)
        end

        -- Function to start the loading animation
        local function startLoadingAnimation()
            local connections = {}
            
            for i, circle in ipairs(circles) do
                local connection
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    if not loadingFrame.Visible or not loadingFrame.Parent then
                        connection:Disconnect()
                        return
                    end
                    
                    local time = tick()
                    local offset = (i - 1) * 0.3
                    local scale = 0.5 + math.abs(math.sin((time + offset) * 3)) * 0.5
                    
                    circle.Size = UDim2.new(0, 15 + 10 * scale, 0, 15 + 10 * scale)
                    circle.BackgroundTransparency = 0.3 + (1 - scale) * 0.7
                end)
                table.insert(connections, connection)
            end
            
            -- Return a function to stop the animation
            return function()
                for _, connection in ipairs(connections) do
                    connection:Disconnect()
                end
                for _, circle in ipairs(circles) do
                    circle.Size = UDim2.new(0, 15, 0, 15)
                    circle.BackgroundTransparency = 0
                end
            end
        end

        return loadingFrame, startLoadingAnimation
    end

    local Gui = Instance.new("ScreenGui")
    Gui.Name = "VoidHubKeyUI"
    Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Gui.Parent = PlayerGui

    -- Background blur effect
    local blur = Instance.new("BlurEffect")
    blur.Size = 0
    blur.Parent = game:GetService("Lighting")

    TweenService:Create(blur, tweenInfo, {Size = 10}):Play()

    -- Main container with glossy gradient
    local Main = Instance.new("Frame")
    Main.Size = UDim2.new(0, 400, 0, 300)
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.BackgroundColor3 = Color3.fromRGB(50, 0, 70)
    Main.BackgroundTransparency = 0.1
    Main.ClipsDescendants = true
    Main.Parent = Gui

    -- Gradient effect
    local gradient = Instance.new("UIGradient")
    gradient.Rotation = 45
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(147, 112, 219)), -- Medium Purple
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(138, 43, 226)), -- Blue Violet
        ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 0, 130)) -- Indigo
    })
    gradient.Parent = Main

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 25)
    corner.Parent = Main

    local uistroke = Instance.new("UIStroke")
    uistroke.Thickness = 3
    uistroke.Color = Color3.fromRGB(255, 105, 180) -- Hot pink border
    uistroke.Transparency = 0.2
    uistroke.Parent = Main

    -- Add glow effect to main frame
    createGlowEffect(Main)

    -- Animate entrance
    Main.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(Main, tweenInfoElastic, {Size = UDim2.new(0, 400, 0, 300)}):Play()

    -- Title with gradient text
    local Title = Instance.new("TextLabel")
    Title.Text = "VOID HUB"
    Title.Size = UDim2.new(0, 300, 0, 60)
    Title.Position = UDim2.new(0.5, -150, 0, 10)
    Title.TextScaled = true
    Title.Font = Enum.Font.GothamBlack
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1
    Title.TextStrokeTransparency = 0.8
    Title.TextStrokeColor3 = Color3.fromRGB(255, 105, 180)
    Title.Parent = Main

    local titleGradient = Instance.new("UIGradient")
    titleGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 105, 180)), -- Hot Pink
        ColorSequenceKeypoint.new(1, Color3.fromRGB(147, 112, 219)) -- Medium Purple
    })
    titleGradient.Parent = Title

    -- Subtitle
    local Subtitle = Instance.new("TextLabel")
    Subtitle.Text = "KEY SYSTEM"
    Subtitle.Size = UDim2.new(0, 200, 0, 25)
    Subtitle.Position = UDim2.new(0.5, -100, 0, 60)
    Subtitle.TextScaled = true
    Subtitle.Font = Enum.Font.GothamMedium
    Subtitle.TextColor3 = Color3.fromRGB(200, 200, 255)
    Subtitle.BackgroundTransparency = 1
    Subtitle.Parent = Main

    -- Key input field
    local EnterKey = Instance.new("TextBox")
    EnterKey.Name = "EnterKey"
    EnterKey.PlaceholderText = "Enter your key here..."
    EnterKey.Text = ""
    EnterKey.Size = UDim2.new(0, 300, 0, 50)
    EnterKey.Position = UDim2.new(0.5, -150, 0, 100)
    EnterKey.BackgroundColor3 = Color3.fromRGB(30, 0, 45)
    EnterKey.BackgroundTransparency = 0.2
    EnterKey.TextColor3 = Color3.fromRGB(255, 255, 255)
    EnterKey.PlaceholderColor3 = Color3.fromRGB(200, 200, 255)
    EnterKey.Font = Enum.Font.Gotham
    EnterKey.TextSize = 16
    EnterKey.Parent = Main

    local enterKeyCorner = Instance.new("UICorner")
    enterKeyCorner.CornerRadius = UDim.new(0, 12)
    enterKeyCorner.Parent = EnterKey

    local enterKeyStroke = Instance.new("UIStroke")
    enterKeyStroke.Thickness = 2
    enterKeyStroke.Color = Color3.fromRGB(255, 105, 180)
    enterKeyStroke.Transparency = 0.3
    enterKeyStroke.Parent = EnterKey

    -- Error message
    local Errortxt = Instance.new("TextLabel")
    Errortxt.Name = "Error"
    Errortxt.Size = UDim2.new(0, 350, 0, 30)
    Errortxt.Position = UDim2.new(0.5, -175, 0, 160)
    Errortxt.BackgroundTransparency = 1
    Errortxt.TextScaled = true
    Errortxt.TextColor3 = Color3.fromRGB(255, 255, 255)
    Errortxt.Font = Enum.Font.Gotham
    Errortxt.Visible = false
    Errortxt.Parent = Main

    -- Loading animation for buttons
    local loadingAnimation, startLoadingAnimation = createLoadingAnimation(Main)
    local stopLoadingAnimation = nil

    local function ShowError(msg, color)
        Errortxt.Visible = true
        Errortxt.Text = msg
        if color then
            Errortxt.TextColor3 = color
        end
        
        -- Pulse animation for error
        local pulseTween = TweenService:Create(
            Errortxt,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true),
            {TextTransparency = 0.3}
        )
        pulseTween:Play()
        
        task.wait(3)
        
        local fadeOut = TweenService:Create(
            Errortxt,
            tweenInfo,
            {TextTransparency = 1}
        )
        fadeOut:Play()
        fadeOut.Completed:Wait()
        Errortxt.Visible = false
        Errortxt.TextTransparency = 0
    end

    -- Close button with special styling
    local closebtn = Instance.new("TextButton")
    closebtn.Name = "Close"
    closebtn.Text = "X"
    closebtn.TextScaled = true
    closebtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closebtn.Font = Enum.Font.GothamBlack
    closebtn.Size = UDim2.new(0, 35, 0, 35)
    closebtn.Position = UDim2.new(1, -45, 0, 10)
    closebtn.BackgroundColor3 = Color3.fromRGB(220, 20, 60) -- Crimson red
    closebtn.BorderSizePixel = 0
    closebtn.Parent = Main

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(1, 0)
    closeCorner.Parent = closebtn

    -- Close button hover effects
    closebtn.MouseEnter:Connect(function()
        TweenService:Create(closebtn, tweenInfo, {
            BackgroundColor3 = Color3.fromRGB(255, 69, 58),
            Size = UDim2.new(0, 40, 0, 40)
        }):Play()
    end)

    closebtn.MouseLeave:Connect(function()
        TweenService:Create(closebtn, tweenInfo, {
            BackgroundColor3 = Color3.fromRGB(220, 20, 60),
            Size = UDim2.new(0, 35, 0, 35)
        }):Play()
    end)

    closebtn.MouseButton1Click:Connect(function()
        -- Close animation
        local closeTween = TweenService:Create(Main, tweenInfo, {
            Size = UDim2.new(0, 0, 0, 0),
            BackgroundTransparency = 1
        })
        
        local blurTween = TweenService:Create(blur, tweenInfo, {Size = 0})
        
        closeTween:Play()
        blurTween:Play()
        
        closeTween.Completed:Wait()
        Gui:Destroy()
        blur:Destroy()
    end)

    -- Get Key Button
    local Getbtn = Instance.new("TextButton")
    Getbtn.Name = "Get"
    Getbtn.Text = "GET KEY"
    Getbtn.Size = UDim2.new(0, 140, 0, 45)
    Getbtn.Position = UDim2.new(0.5, -150, 0, 200)
    Getbtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
    Getbtn.BackgroundTransparency = 0.1
    Getbtn.Font = Enum.Font.GothamBold
    Getbtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Getbtn.TextSize = 16
    Getbtn.AutoButtonColor = false
    Getbtn.Parent = Main

    local getCorner = Instance.new("UICorner")
    getCorner.CornerRadius = UDim.new(0, 15)
    getCorner.Parent = Getbtn

    local getStroke = Instance.new("UIStroke")
    getStroke.Thickness = 2
    getStroke.Color = Color3.fromRGB(255, 105, 180)
    getStroke.Transparency = 0.2
    getStroke.Parent = Getbtn

    local getGradient = Instance.new("UIGradient")
    getGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(147, 112, 219)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(138, 43, 226))
    })
    getGradient.Parent = Getbtn

    -- Check Key Button
    local Checkbtn = Instance.new("TextButton")
    Checkbtn.Name = "Check"
    Checkbtn.Text = "CHECK KEY"
    Checkbtn.Size = UDim2.new(0, 140, 0, 45)
    Checkbtn.Position = UDim2.new(0.5, 10, 0, 200)
    Checkbtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
    Checkbtn.BackgroundTransparency = 0.1
    Checkbtn.Font = Enum.Font.GothamBold
    Checkbtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Checkbtn.TextSize = 16
    Checkbtn.AutoButtonColor = false
    Checkbtn.Parent = Main

    local checkCorner = Instance.new("UICorner")
    checkCorner.CornerRadius = UDim.new(0, 15)
    checkCorner.Parent = Checkbtn

    local checkStroke = Instance.new("UIStroke")
    checkStroke.Thickness = 2
    checkStroke.Color = Color3.fromRGB(255, 105, 180)
    checkStroke.Transparency = 0.2
    checkStroke.Parent = Checkbtn

    local checkGradient = Instance.new("UIGradient")
    checkGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(147, 112, 219)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(138, 43, 226))
    })
    checkGradient.Parent = Checkbtn

    -- Button hover effects for Get button
    Getbtn.MouseEnter:Connect(function()
        TweenService:Create(Getbtn, tweenInfo, {
            BackgroundTransparency = 0,
            Size = UDim2.new(0, 145, 0, 48)
        }):Play()
        TweenService:Create(getStroke, tweenInfo, {Transparency = 0}):Play()
    end)

    Getbtn.MouseLeave:Connect(function()
        TweenService:Create(Getbtn, tweenInfo, {
            BackgroundTransparency = 0.1,
            Size = UDim2.new(0, 140, 0, 45)
        }):Play()
        TweenService:Create(getStroke, tweenInfo, {Transparency = 0.2}):Play()
    end)

    -- Button hover effects for Check button
    Checkbtn.MouseEnter:Connect(function()
        TweenService:Create(Checkbtn, tweenInfo, {
            BackgroundTransparency = 0,
            Size = UDim2.new(0, 145, 0, 48)
        }):Play()
        TweenService:Create(checkStroke, tweenInfo, {Transparency = 0}):Play()
    end)

    Checkbtn.MouseLeave:Connect(function()
        TweenService:Create(Checkbtn, tweenInfo, {
            BackgroundTransparency = 0.1,
            Size = UDim2.new(0, 140, 0, 45)
        }):Play()
        TweenService:Create(checkStroke, tweenInfo, {Transparency = 0.2}):Play()
    end)

    -- Get Key button functionality
    Getbtn.MouseButton1Click:Connect(function()
        -- Click animation
        TweenService:Create(Getbtn, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(255, 105, 180),
            Size = UDim2.new(0, 135, 0, 43)
        }):Play()
        
        task.wait(0.1)
        
        TweenService:Create(Getbtn, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(75, 0, 130),
            Size = UDim2.new(0, 140, 0, 45)
        }):Play()

        local link = "https://workink.net/23KW/olr2h0y6"
        pcall(function()
            setclipboard(link)
        end)
        ShowError("✅ Link copied to clipboard!", Color3.fromRGB(0, 255, 127))
    end)

    -- Check Key button functionality
    Checkbtn.MouseButton1Click:Connect(function()
        -- Click animation
        TweenService:Create(Checkbtn, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(255, 105, 180),
            Size = UDim2.new(0, 135, 0, 43)
        }):Play()
        
        task.wait(0.1)
        
        TweenService:Create(Checkbtn, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(75, 0, 130),
            Size = UDim2.new(0, 140, 0, 45)
        }):Play()

        local key = EnterKey.Text
        
        -- Show loading animation
        loadingAnimation.Visible = true
        if stopLoadingAnimation then
            stopLoadingAnimation()
        end
        stopLoadingAnimation = startLoadingAnimation()
        
        -- Simulate processing delay
        wait(1.5)
        
        loadingAnimation.Visible = false
        if stopLoadingAnimation then
            stopLoadingAnimation()
            stopLoadingAnimation = nil
        end
        
        if table.find(ValidKeys, key) then
            ShowError("✅ Valid Key! Welcome to Void Hub!", Color3.fromRGB(0, 255, 127))
            
            -- Success animation
            local successTween = TweenService:Create(Main, tweenInfoBounce, {
                BackgroundColor3 = Color3.fromRGB(0, 100, 0),
                Size = UDim2.new(0, 420, 0, 320)
            })
            successTween:Play()
            
            wait(1)
            
            VoidHub:SaveKey(key)
            
            -- Exit animation
            local exitTween = TweenService:Create(Main, tweenInfo, {
                Size = UDim2.new(0, 0, 0, 0),
                BackgroundTransparency = 1
            })
            exitTween:Play()
            
            local blurTween = TweenService:Create(blur, tweenInfo, {Size = 0})
            blurTween:Play()
            
            exitTween.Completed:Wait()
            Gui:Destroy()
            blur:Destroy()
            
            if ExecuteAfterKey then
                VoidHub:Execute(ExecuteAfterKey)
            end
        else
            ShowError("❌ Invalid Key! Please try again.", Color3.fromRGB(255, 69, 58))
            
            -- Shake animation for invalid key
            local shakeTween = TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 6, true), {
                Position = UDim2.new(0.5, 10, 0.5, 0)
            })
            shakeTween:Play()
        end
    end)

    -- Make draggable (PC + Mobile)
    local UIS = game:GetService("UserInputService")
    local dragging, dragInput, dragStart, startPos

    Main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Main.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

return VoidHub
